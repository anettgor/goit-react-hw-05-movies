{"version":3,"file":"static/js/653.b861c97b.chunk.js","mappings":"iRACA,EAAqB,mBAArB,EAAwD,8BAAxD,EAA8F,sBAA9F,EAA2H,qBAA3H,EAAyJ,uB,SC6EzJ,MAvEA,WACE,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAG,4DADG,mCACH,kBAAqEP,GAExEQ,EAAY,mCAAG,WAAMC,GAAN,kFACnBA,EAAEC,iBADiB,UAEMC,EAAAA,EAAAA,GAAUJ,GAFhB,OAEbK,EAFa,OAGbC,GAHa,OAGHD,EAAWV,SACvBY,EAAe,GACfD,GAAsB,IAAfA,EAAIE,QACbF,EAAIG,KAAI,SAAAC,GAAK,OACXH,EAAaI,KAAK,CAAEC,MAAOF,EAAME,OAASF,EAAMG,KAAMC,GAAIJ,EAAMI,IADrD,IAGblB,EAAWW,GACXQ,EAAkBtB,IAElBuB,EAAAA,OAAAA,KAAY,yCAZK,2CAAH,sDAgBZD,EAAoB,SAAAtB,GAExBM,EAD6B,KAAVN,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAE/CwB,QAAQC,IAAIpB,EACb,EAMD,OACE,iCACE,kBAAMqB,UAAWC,EAAUC,SAAUpB,EAArC,WACE,kBACEkB,UAAWC,EACXE,KAAK,OACLC,YAAY,mBACZC,MAAO/B,EACPgC,SAZa,SAAAvB,GACnBR,EAASQ,EAAEwB,OAAOF,MACnB,KAYK,mBAAQL,UAAWC,EAAYE,KAAK,SAApC,wBAKF,eAAIH,UAAWC,EAAf,SACGzB,GACCA,EAAQc,KAAI,SAAAkB,GACV,OACE,SAAC,KAAD,CACEC,MAAO,CACLC,MAAO,QACPC,eAAgB,OAChBC,OAAQ,WAEVC,GAAE,kBAAaL,EAAOb,IANxB,UAQE,eAAIK,UAAWC,EAAf,SACGO,EAAOf,OADkBe,EAAOb,KAKxC,QAIV,C,qBCvED,IALkB,SAAAmB,GAAG,OACnBC,MAAMD,GACHE,MAAK,SAAA7B,GAAG,OAAIA,EAAI8B,MAAR,IACRC,OAAM,SAAAC,GAAK,OAAIrB,QAAQC,IAAIoB,EAAhB,GAHK,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx","utils/fetchMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"li\":\"Movies_li__oWqWQ\",\"listContainer\":\"Movies_listContainer__uvrVz\",\"input\":\"Movies_input__OE3ef\",\"form\":\"Movies_form__mp42q\",\"button\":\"Movies_button__hVjwG\"};","// import fetchTrending from './../../utils/fetchMovies';\nimport { useState } from 'react';\nimport fetchData from './../../utils/fetchMovies';\nimport { Notify } from 'notiflix';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\n// import Spinner from './../Spinner/Spinner';\nfunction Movies() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const key = '7bfaca5914dfe808eee9ce7ecac1ff40';\n  const URL = `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}`;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const movieQuery = await fetchData(URL);\n    const res = [...movieQuery.results];\n    let resultHolder = [];\n    if (res && res.length !== 0) {\n      res.map(movie =>\n        resultHolder.push({ title: movie.title || movie.name, id: movie.id })\n      );\n      setResults(resultHolder);\n      updateQueryString(query);\n    } else {\n      Notify.info('No movies match your query. Try again');\n    }\n  };\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n    console.log(searchParams);\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          placeholder=\"Search movies...\"\n          value={query}\n          onChange={handleChange}\n        ></input>\n        <button className={css.button} type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      <ul className={css.listContainer}>\n        {results &&\n          results.map(result => {\n            return (\n              <Link\n                style={{\n                  color: 'unset',\n                  textDecoration: 'none',\n                  cursor: 'pointer',\n                }}\n                to={`/movies/${result.id}`}\n              >\n                <li className={css.li} key={result.id}>\n                  {result.title}\n                </li>\n              </Link>\n            );\n          })}\n      </ul>\n    </>\n  );\n}\n\nexport default Movies;\n","const fetchData = url =>\n  fetch(url)\n    .then(res => res.json())\n    .catch(error => console.log(error));\n\nexport default fetchData;\n"],"names":["useState","query","setQuery","results","setResults","useSearchParams","searchParams","setSearchParams","URL","handleSubmit","e","preventDefault","fetchData","movieQuery","res","resultHolder","length","map","movie","push","title","name","id","updateQueryString","Notify","console","log","className","css","onSubmit","type","placeholder","value","onChange","target","result","style","color","textDecoration","cursor","to","url","fetch","then","json","catch","error"],"sourceRoot":""}